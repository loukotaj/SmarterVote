name: Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - staging
        - prod

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }}
      TF_VAR_region: ${{ secrets.GCP_REGION }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.0
    
    - name: Setup Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}
    
    - name: Terraform Init
      run: |
        cd infra/envs/dev
        terraform init
    
    - name: Terraform Plan
      run: |
        cd infra/envs/dev
        terraform plan -out=tfplan
    
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main'
      run: |
        cd infra/envs/dev
        terraform apply -auto-approve tfplan

  deploy-services:
    needs: terraform
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}
    
    - name: Configure Docker
      run: gcloud auth configure-docker
    
    - name: Deploy Enqueue API to Cloud Run
      run: |
        gcloud run deploy smartervote-enqueue-api \
          --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/smartervote-enqueue-api:${{ github.sha }} \
          --platform managed \
          --region ${{ secrets.GCP_REGION }} \
          --allow-unauthenticated \
          --set-env-vars="PROJECT_ID=${{ secrets.GCP_PROJECT_ID }}"

  deploy-web:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: web/package-lock.json
    
    - name: Install dependencies
      run: |
        cd web
        npm ci
    
    - name: Build
      run: |
        cd web
        npm run build
    
    - name: Deploy to Firebase Hosting
      uses: FirebaseExtended/action-hosting-deploy@v0
      with:
        repoToken: '${{ secrets.GITHUB_TOKEN }}'
        firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
        projectId: ${{ secrets.GCP_PROJECT_ID }}
        entryPoint: web
