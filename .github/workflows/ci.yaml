name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort mypy
        if [ -f pipeline/requirements.txt ]; then pip install -r pipeline/requirements.txt; fi
    
    - name: Lint with flake8
      run: |
        flake8 pipeline/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 pipeline/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Check formatting with black
      run: black --check pipeline/
    
    - name: Check import sorting with isort
      run: isort --check-only pipeline/
    
    - name: Type check with mypy
      run: mypy pipeline/

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov
        if [ -f pipeline/requirements.txt ]; then pip install -r pipeline/requirements.txt; fi
    
    - name: Run tests
      run: |
        pytest tests/ --cov=pipeline --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3

  build:
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Container Registry
      uses: docker/login-action@v3
      with:
        registry: gcr.io
        username: _json_key
        password: ${{ secrets.GCP_SA_KEY }}
    
    - name: Build and push pipeline image
      uses: docker/build-push-action@v5
      with:
        context: ./pipeline
        push: true
        tags: gcr.io/${{ secrets.GCP_PROJECT_ID }}/smartervote-pipeline:${{ github.sha }}
    
    - name: Build and push enqueue-api image
      uses: docker/build-push-action@v5
      with:
        context: ./services/enqueue-api
        push: true
        tags: gcr.io/${{ secrets.GCP_PROJECT_ID }}/smartervote-enqueue-api:${{ github.sha }}

  web-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: web/package-lock.json
    
    - name: Install dependencies
      run: |
        cd web
        npm ci
    
    - name: Build
      run: |
        cd web
        npm run build
    
    - name: Run tests
      run: |
        cd web
        npm run test
