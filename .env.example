# SmarterVote Environment Configuration Template
# Copy this file to .env and customize for your environment

# ===== ChromaDB Vector Database Configuration =====
# Directory for ChromaDB persistent storage (local development)
CHROMA_PERSIST_DIR=./data/chroma_db

# Chunking strategy configuration
CHROMA_CHUNK_SIZE=500
CHROMA_CHUNK_OVERLAP=50

# Embedding model (sentence-transformers compatible)
CHROMA_EMBEDDING_MODEL=all-MiniLM-L6-v2

# Search and similarity configuration
CHROMA_SIMILARITY_THRESHOLD=0.7
CHROMA_MAX_RESULTS=100

# ===== AI Model API Keys =====
# OpenAI API (for GPT-4o)
OPENAI_API_KEY=your_openai_api_key_here

# Anthropic API (for Claude-3.5)
ANTHROPIC_API_KEY=your_anthropic_api_key_here

# xAI API (for grok-3)
XAI_API_KEY=your_xai_api_key_here

# ===== Google Cloud Configuration =====
# Project ID for GCP services
GOOGLE_CLOUD_PROJECT=your_gcp_project_id

# Service account key file path (for local development)
GOOGLE_APPLICATION_CREDENTIALS=./path/to/service-account-key.json

# Cloud Storage bucket for published race data
GCS_BUCKET_NAME=your_smartervote_bucket

# Pub/Sub topic for pipeline job queue
PUBSUB_TOPIC=smartervote-jobs

# ===== Search and Content Fetching =====
# Google Search API (for fresh content discovery)
GOOGLE_SEARCH_API_KEY=your_google_search_api_key
GOOGLE_SEARCH_CX=your_custom_search_engine_id

# Rate limiting for web scraping (requests per minute)
SCRAPING_RATE_LIMIT=30

# User agent for web scraping
SCRAPING_USER_AGENT=SmarterVote/1.0 (+https://smartervote.ai)

# ===== Database Configuration =====
# PostgreSQL connection (if using SQL database for metadata)
DATABASE_URL=postgresql://user:password@localhost:5432/smartervote

# ===== Logging and Monitoring =====
# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Structured logging format (json, text)
LOG_FORMAT=json

# Enable performance monitoring
ENABLE_MONITORING=true

# ===== Development and Testing =====
# Environment type (development, staging, production)
ENVIRONMENT=development

# Enable debug mode
DEBUG=true

# Test database directory (for pytest)
TEST_CHROMA_DIR=./data/test_chroma_db

# Skip expensive operations in tests
SKIP_SLOW_TESTS=false

# ===== Security =====
# Secret key for API authentication
API_SECRET_KEY=your_secure_random_secret_key

# CORS allowed origins (comma-separated)
CORS_ORIGINS=http://localhost:3000,http://localhost:5173

# Maximum file upload size (MB)
MAX_UPLOAD_SIZE=10

# ===== Pipeline Configuration =====
# Processing timeout per step (minutes)
STEP_TIMEOUT=30

# Maximum content size per source (MB)
MAX_CONTENT_SIZE=5

# Enable content caching
ENABLE_CONTENT_CACHE=true

# Cache TTL (hours)
CONTENT_CACHE_TTL=24

# ===== Web Frontend =====
# API base URL for frontend
VITE_API_BASE_URL=http://localhost:8000

# Enable analytics
VITE_ENABLE_ANALYTICS=false

# Analytics tracking ID
VITE_ANALYTICS_ID=your_analytics_id

# ===== Performance Tuning =====
# ChromaDB batch size for indexing
CHROMA_BATCH_SIZE=100

# Maximum concurrent requests for content fetching
MAX_CONCURRENT_REQUESTS=5

# Embedding batch size
EMBEDDING_BATCH_SIZE=32

# Memory limit for content processing (MB)
CONTENT_MEMORY_LIMIT=512
